initSidebarItems({"fn":[["bell",""],["delay_line_generator","Wraps a generator function, delaying its output by `delay_length_samples` number of samples. This isnâ€™t very useful in most cases because generator will likely change due to frequency changes.alloc Look at `::crate::filter::DelayLine` for a more stateful filter that works on generated samples instead for most use cases."],["karplus_strong","Bastardised and butchered generic Karplus-Strong synthesis. Try a Sawtooth, or even a Bell wave."],["noise",""],["organ",""],["rising_linear","`rising_linear` is a stateful generator function. Starting from `start_frequency`, it increases the output frequency by `increment_per_sample` each time it is called, and loops back to `start_frequency` when it is above `end_frequency`."],["sampler","`sampler` creates a a generator function given a bunch of samples. Different frequencies are generated using a simple pitch shift. This function is unsafe because we want to share `sample` without resorting to a `'static` lifetime (making it easier to use with bindgen)."],["sawtooth_wave",""],["sine_wave",""],["square_wave",""],["tangent_wave",""],["triangle_wave",""]]});